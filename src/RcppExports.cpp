// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// bond_price
double bond_price(Rcpp::NumericVector times, Rcpp::NumericVector cashflows, double rate);
RcppExport SEXP _FinancialFunctions_bond_price(SEXP timesSEXP, SEXP cashflowsSEXP, SEXP rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type times(timesSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type cashflows(cashflowsSEXP);
    Rcpp::traits::input_parameter< double >::type rate(rateSEXP);
    rcpp_result_gen = Rcpp::wrap(bond_price(times, cashflows, rate));
    return rcpp_result_gen;
END_RCPP
}
// bond_ytm
double bond_ytm(Rcpp::NumericVector times, Rcpp::NumericVector cashflows, double price);
RcppExport SEXP _FinancialFunctions_bond_ytm(SEXP timesSEXP, SEXP cashflowsSEXP, SEXP priceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type times(timesSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type cashflows(cashflowsSEXP);
    Rcpp::traits::input_parameter< double >::type price(priceSEXP);
    rcpp_result_gen = Rcpp::wrap(bond_ytm(times, cashflows, price));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FinancialFunctions_bond_price", (DL_FUNC) &_FinancialFunctions_bond_price, 3},
    {"_FinancialFunctions_bond_ytm", (DL_FUNC) &_FinancialFunctions_bond_ytm, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_FinancialFunctions(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
